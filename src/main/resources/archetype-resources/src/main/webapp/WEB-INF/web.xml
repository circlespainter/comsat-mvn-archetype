<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_0.xsd"
         version="3.0"
         metadata-complete="false"> <!-- Will scan libs for servlet annotations as well, default -->
    <display-name>Cargo Archetype Web Application Single Module</display-name>

#if ($useWebXml == "true")
    <!-- Register the fiber-blocking Jersey servlet -->
    <servlet>
        <display-name>fiber</display-name>
        <servlet-name>fiber</servlet-name>
        <!-- Support async (needed by fiber-blocking) -->
        <servlet-class>co.paralleluniverse.fibers.jersey.ServletContainer</servlet-class>
        <async-supported>true</async-supported>
        <!-- Add Jersey configuration class -->
        <init-param>
            <param-name>javax.ws.rs.Application</param-name>
            <param-value>${groupId}.JerseyApplication</param-value>
        </init-param>
        <!-- Set packages to be scanned for resources -->
        <init-param>
            <param-name>jersey.config.server.provider.packages</param-name>
            <param-value>${groupId}</param-value>
        </init-param>
        <!-- Don't lazy-load (fail-fast) -->
        <load-on-startup>1</load-on-startup>
    </servlet>

    <!-- Mapping -->
    <servlet-mapping>
        <servlet-name>fiber</servlet-name>
        <url-pattern>/fiber-jaxrs/*</url-pattern>
    </servlet-mapping>

    <!-- Datasource -->
    <resource-ref>
        <description>DB Connection</description>
        <res-ref-name>jdbc/fiberds</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
    </resource-ref>
#else
    <!-- Register the fiber-blocking Jersey servlet -->
    <!--servlet>
        <display-name>fiber</display-name>
        <servlet-name>fiber</servlet-name-->
        <!-- Support async (needed by fiber-blocking) -->
        <!--servlet-class>co.paralleluniverse.fibers.jersey.ServletContainer</servlet-class>
        <async-supported>true</async-supported-->
        <!-- Add Jersey configuration class -->
        <!--init-param>
            <param-name>javax.ws.rs.Application</param-name>
            <param-value>${groupId}.JerseyApplication</param-value>
        </init-param-->
        <!-- Set packages to be scanned for resources -->
        <!--init-param>
            <param-name>jersey.config.server.provider.packages</param-name>
            <param-value>${groupId}</param-value>
        </init-param-->
        <!-- Don't lazy-load (fail-fast) -->
        <!--load-on-startup>1</load-on-startup>
    </servlet-->

    <!-- Mapping -->
    <!--servlet-mapping>
        <servlet-name>fiber</servlet-name>
        <url-pattern>/fiber-jaxrs/*</url-pattern>
    </servlet-mapping-->

    <!-- Datasource -->
    <!--resource-ref>
        <description>DB Connection</description>
        <res-ref-name>jdbc/fiberds</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
    </resource-ref-->
#end
</web-app>